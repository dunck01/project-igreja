version: '3.8'

services:
  # Frontend - React + Vite
  frontend:
    build:
      context: ./Client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # Backend - Node.js + Express + Prisma
  backend:
    build:
      context: ./Server/api
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      # Usando MongoDB Atlas (cloud) - substitua pela sua URL
      DATABASE_URL: mongodb+srv://dunckf_db_user:YfBdMb1hnQHODvrJ@obpc-igreja.q5oifuj.mongodb.net/obpc-gyn?retryWrites=true&w=majority
      JWT_SECRET: seu_jwt_secret_aqui
      PORT: 3001
    depends_on:
      - mongodb
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - uploads:/app/uploads

  # Database - MongoDB local (opcional - pode usar MongoDB Atlas)
  mongodb:
    image: mongo:7-jammy
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: senha123
      MONGO_INITDB_DATABASE: igreja_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Mongo Express - Database management
  mongo-express:
    image: mongo-express:latest
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: senha123
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - mongodb

volumes:
  mongodb_data:
    driver: local
  uploads:
    driver: local

networks:
  app-network:
    driver: bridge